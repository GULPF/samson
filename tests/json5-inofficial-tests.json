{
  "type-no-data": {
    "output": null,
    "input": ""
  },
  "type-null": {
    "output": "null",
    "input": "\nnull"
  },
  "type-no-undefined": {
    "output": null,
    "input": "undefined"
  },
  "type-no-raw": {
    "output": null,
    "input": "foobar"
  },
  "type-bool-true": {
    "output": "true",
    "input": "true"
  },
  "type-bool-false": {
    "output": "false",
    "input": "false"
  },
  "type-number": {
    "output": "0",
    "input": "0"
  },
  "type-string": {
    "output": "\"\"",
    "input": "\"\""
  },
  "type-object": {
    "output": "{}",
    "input": "{}"
  },
  "type-array": {
    "output": "[]",
    "input": "[]"
  },
  "num-nan": {
    "output": "NaN",
    "input": "NaN"
  },
  "num-signed-nan": {
    "output": "NaN",
    "input": "+NaN"
  },
  "num-signed-neg-nan": {
    "output": "NaN",
    "input": "-NaN"
  },
  "num-positive-inf": {
    "output": "Infinity",
    "input": "Infinity"
  },
  "num-signed-inf": {
    "output": "Infinity",
    "input": "+Infinity"
  },
  "num-negative-inf": {
    "output": "-Infinity",
    "input": "-Infinity"
  },
  "num-inf-exact-case": {
    "output": null,
    "input": "INFINITY"
  },
  "num-hex-zero": {
    "output": "0",
    "input": "0x0"
  },
  "num-cut-hex": {
    "output": null,
    "input": "0x"
  },
  "num-all-hex": {
    "output": "12841684683518",
    "input": "0xBADF00DCAFE"
  },
  "num-mixed-case": {
    "output": "3735928559",
    "input": "0xDeAdBEef"
  },
  "num-signed-hex": {
    "output": "31",
    "input": "+0x1F"
  },
  "num-negative-hex": {
    "output": "-31",
    "input": "-0x1f"
  },
  "num-bad-hex": {
    "output": null,
    "input": "0xBADxF00D"
  },
  "num-no-hex-float": {
    "output": null,
    "input": "0x12.345"
  },
  "num-hex-exponent": {
    "output": "4836",
    "input": "0x0012e4"
  },
  "num-float": {
    "output": "123.456",
    "input": "123.456"
  },
  "num-signed-foat": {
    "output": "-0.1",
    "input": "-0.1"
  },
  "num-omit-trailing-mantissa": {
    "output": "1234000",
    "input": "1234.e3"
  },
  "num-omit-leading-mantissa": {
    "output": "-123.4",
    "input": "-.1234e3"
  },
  "num-bad-float": {
    "output": null,
    "input": "0.12.345"
  },
  "num-bad-sum": {
    "output": null,
    "input": "0.12+345"
  },
  "num-uc-exp": {
    "output": "-1230000",
    "input": "-123E+4"
  },
  "num-float-exp": {
    "output": "123000",
    "input": "0.0123e7"
  },
  "num-bad-exp": {
    "output": null,
    "input": "123e7.3"
  },
  "num-bad-char": {
    "output": null,
    "input": "123a456"
  },
  "num-no-exp": {
    "output": null,
    "input": "123e"
  },
  "num-dec-base-signed-exp": {
    "output": "1.23e-10",
    "input": "123E-012"
  },
  "num-trailing-dot": {
    "output": "1",
    "input": "1."
  },
  "object-singlequoted": {
    "output": "{\"q\": 1, \"w\": 2, \"e\": 3}",
    "input": "{'q': 1,'w': 2,'e': 3}"
  },
  "object-doublequoted": {
    "output": "{\"q\": 1, \"w\": 2, \"e\": 3}",
    "input": "{\"q\": 1, \"w\": 2, \"e\": 3}"
  },
  "object-unquoted": {
    "output": "{\"$FOO_bar123\": \"baz\"}",
    "input": "{$FOO_bar123: 'baz'}"
  },
  "object-no-first-digit": {
    "output": null,
    "input": "{123foo: bar}"
  },
  "object-unquoted-unicode": {
    "output": "{\"\u1f04\u03bb\u03c6\u03b1\": \"baz\"}",
    "input": "{\u1f04\u03bb\u03c6\u03b1:'baz'}"
  },
  "object-unicode-escape-key": {
    "output": "{\"foo\": \"bar\", \"\u1f04\u03bb\u03c6\u03b1\": \"baz\", \"qwe\u1f04rty\": \"quux\"}",
    "input": "{foo:'bar', \u1f04\u03bb\u03c6\u03b1:'baz', qwe\u1f04rty: 'quux'}"
  },
  "object-special-identifiers": {
    "output": "{\"true\": 1, \"false\": 1, \"null\": 1, \"NaN\": 1}",
    "input": "{true: 1, false: 1, null: 1, NaN: 1}"
  },
  "object-no-raw-literal": {
    "output": null,
    "input": "{foo: bar}"
  },
  "object-bad-literal": {
    "output": null,
    "input": "{foo-bar: 123}"
  },
  "object-no-space-in-key": {
    "output": null,
    "input": "{foo bar: 123}"
  },
  "object-no-comment-in-key": {
    "output": null,
    "input": "{foo /*bar*/baz: 123}"
  },
  "object-no-array-keys": {
    "output": null,
    "input": "{[]: 123}"
  },
  "object-no-empty-keys": {
    "output": null,
    "input": "{: 123}"
  },
  "object-empty-string-key": {
    "output": "{\"s\": {\"\": 1}, \"m\": {\"\": 2}}",
    "input": "{s: {'': 1}, m: {\"\": 2}}"
  },
  "object-bad-unicode-dash": {
    "output": null,
    "input": "{ foo\\u002dbar: 123}"
  },
  "object-incomplete-unicode-sequence": {
    "output": null,
    "input": "{ foo\\u12f: 123}"
  },
  "object-double-escape": {
    "output": null,
    "input": "{ foo\\u1234bar: 123}"
  },
  "object-bad-unicode-space": {
    "output": null,
    "input": "{ \\u0020foobar: 123}"
  },
  "object-we-arent-es3": {
    "output": "{\"new\": 1, \"delete\": 2, \"throw\": 3}",
    "input": "{new: 1, delete: 2, throw: 3}"
  },
  "object-last-digits": {
    "output": "{\"$123e2\": 1, \"abc123\": 2}",
    "input": "{$123e2: 1, abc123: 2}"
  },
  "object-unicode-in-string": {
    "output": "{\"\uff13qwe\": 123}",
    "input": "{\"\uff13qwe\": 123}"
  },
  "object-unicode-esc-in-string": {
    "output": "{\"\uff13qwe\": 123}",
    "input": "{\"\\uff13qwe\": 123}"
  },
  "object-unicode-digits-first-esc": {
    "output": null,
    "input": "{\uff13qwe: 123}"
  },
  "object-unicode-weirdness-esc": {
    "output": "{\"digit\uff13\": 1, \"comb\u094F\": 2, \"punct\u2040\": 3, \"zwnj\u200C\": 4}",
    "input": "{digit\\uff13: 1, comb\\u094F: 2, punct\\u2040: 3, zwnj\\u200C: 4}"
  },
  "object-unicode-weirdness-lit": {
    "output": "{\"digit\uff13\": 1, \"comb\u094F\": 2, \"punct\u2040\": 3, \"zwnj\u200C\": 4}",
    "input": "{digit\\uff13: 1, comb\\u094F: 2, punct\\u2040: 3, zwnj\\u200C: 4}"
  },
  "multi-string-nospace": {
    "output": null,
    "input": "\"foo\"\"bar\""
  },
  "multi-string": {
    "output": null,
    "input": "\"foo\" \"bar\""
  },
  "multi-array": {
    "output": null,
    "input": "[ 0 ] [ 0 ]"
  },
  "multi-object": {
    "output": null,
    "input": "{} {}"
  },
  "comment-single": {
    "output": "\"foobar\"",
    "input": "// blahblah  \n\"foobar\"\n  // another one"
  },
  "comment-multi": {
    "output": "\"foobar\"",
    "input": "/*\n   * 123  \n */ 'foobar' /**/"
  },
  "comment-single-newlines": {
    "output": "[123, 456, 789]",
    "input": "[// foo\r123,// bar\u2028456,// baz\u2029789]"
  },
  "comment-inside": {
    "output": "[123, \" // foo\", \" /* bar\"]",
    "input": "[/* \" // */ \n123, // \n \" // foo\", ' /* bar']"
  },
  "comment-in-token": {
    "output": null,
    "input": "123/*comment*/456"
  },
  "comment-java-style": {
    "output": "123",
    "input": "/*****************/\n123\n/****************/"
  },
  "comment-object": {
    "output": "{\"q\": 123}",
    "input": "/**/ { /**/q /**/: /**/ 123 /**/, /**/ } //"
  },
  "object-surrogate": {
    "output": null,
    "input": "{\u2028\u2029: 1}"
  },
  "object-nested": {
    "output": "{\"q\": {\"w\": {\"e\": [1]}}}",
    "input": "{q: {'w': {\"e\": [1]}}}"
  },
  "object-trailing-comma": {
    "output": "{\"foo\": \"bar\"}",
    "input": "{foo: 'bar',}"
  },
  "object-leading-comma-style": {
    "output": "{\"q\": 1, \"w\": 2, \"e\": 3}",
    "input": "{ q: 1\n, w: 2\n, e: 3 }"
  },
  "object-incomplete": {
    "output": null,
    "input": "{q: 1,w: 2,{}"
  },
  "object-isnt-array": {
    "output": null,
    "input": "{1, 2}"
  },
  "object-no-single-comma": {
    "output": null,
    "input": "{,}"
  },
  "object-no-elisions": {
    "output": null,
    "input": "{q: 1,\n,w: 2}"
  },
  "string-invalid-decimal-escape": {
    "output": null,
    "input": "\"\\01\""
  },
  "string-invalid-decimal-escape-2": {
    "output": null,
    "input": "\"\\1\""
  },
  "string-valid-escapes": {
    "output": "\" ' \\\" \\\\ \\b \\f \\n \\r \\t \\u000b \\u0000 \"",
    "input": "\" \\' \\\" \\\\ \\b \\f \\n \\r \\t \\v \\0 \""
  },
  "string-double-quotes": {
    "output": "\"foobar\"",
    "input": "\"foobar\""
  },
  "string-single-quotes": {
    "output": "\"foobar\"",
    "input": "'foobar'"
  },
  "string-open": {
    "output": null,
    "input": "\" \\\\ \\\\ \\\\ \\\\ \\\""
  },
  "string-not-open": {
    "output": "\"\\\\ \\\\ \\\\ \\\\\"",
    "input": "\"\\\\ \\\\ \\\\ \\\\\""
  },
  "string-continuation": {
    "output": "\" foo  bar  \"",
    "input": "' foo \\\n bar \\\n '"
  },
  "string-win-continuation": {
    "output": "\"foobar\"",
    "input": "'foo\\\r\nbar'"
  },
  "string-win-reverse-continuation": {
    "output": null,
    "input": "'foo\\\n\rbar'"
  },
  "string-unicode-continuation": {
    "output": "\"foobarbaz\"",
    "input": "'foo\\\u2028bar\\\u2029baz'"
  },
  "string-multi-bad-continuation": {
    "output": null,
    "input": "'foo\\\n\nbar'"
  },
  "string-bad-ending": {
    "output": null,
    "input": "'foo\rbar'"
  },
  "string-literal-unicode": {
    "output": "\"foo\uFEFF\u2030bar\u1234\"",
    "input": "'foo\uFEFF\u2030bar\u1234'"
  },
  "string-control-char": {
    "output": "\"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\u000b\\f\\u000e\\u000f\"",
    "input": "'\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x0b\\x0c\\x0e\\x0f'"
  },
  "string-hex-escape": {
    "output": "\"\\u0001\u0023\u00ab\u00cd\u00ef\"",
    "input": "'\\x01\\x23\\xab\\xCd\\xEF'"
  },
  "string-bad-unicode": {
    "output": null,
    "input": "'\\uEFGH'"
  },
  "string-incomplete-unicode": {
    "output": null,
    "input": "'\\u$'"
  },
  "string-bad-hex": {
    "output": null,
    "input": "'\\xFG'"
  },
  "string-incomplete-hex": {
    "output": null,
    "input": "'\\x$'"
  },
  "string-escape-double-quotes": {
    "output": "\"\\\"''\"",
    "input": "'\\\"\\'\\''"
  },
  "string-escape-single-quotes": {
    "output": "\"   '\\\"\\\"   \"",
    "input": "'   \\'\"\\\"   '"
  },
  "string-unicode-escape": {
    "output": "\"\\u0000\uffffx\ufeff\u1234\u9f6a\\u2028\uabcd\"",
    "input": "'\\u0000\\uFFFFx\\uFeFf\\u1234\\u9F6a\\u2028\\uabcd'"
  },
  "string-arbitrary-escape": {
    "output": "\"X12Uqwe\\r\\tyiopasd\\fghjklzc\\u000b\\b\\nm \"",
    "input": "'\\X12\\U\\q\\w\\e\\r\\t\\y\\i\\o\\p\\a\\s\\d\\f\\g\\h\\j\\k\\l\\z\\c\\v\\b\\n\\m\\ '"
  },
  "array-all-types": {
    "output": "[1.2, \"3,4\", {}, [], null, Infinity]",
    "input": "[1.2, '3,4', {}, [], null, Infinity]"
  },
  "array-trailing-comma": {
    "output": "[1, 2, 3, 4]",
    "input": "[1, 2, 3, 4,]"
  },
  "array-incomplete": {
    "output": null,
    "input": "[1, 2, 3, []"
  },
  "array-nested": {
    "output": "[[[[[[]]]]], [[], []]]",
    "input": "[[[[[[ /*[]*/]]]]], [[], []]]"
  },
  "array-isnt-object": {
    "output": null,
    "input": "[1: 2]"
  },
  "array-no-single-comma": {
    "output": null,
    "input": "[,]"
  },
  "array-no-elisions": {
    "output": null,
    "input": "[1,,2,3]"
  },
  "ws-allow-prefix": {
    "output": "123",
    "input": " \t123"
  },
  "ws-unicode-spaces": {
    "output": "{\"foo\": 123}",
    "input": "\u0020\u00A0\uFEFF{\u0009\u000A\u000B\u000C\u000D\u1680foo\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A: \u2028\u2029\u202F\u205F\u3000123\uFEFF}"
  },
  "ws-unicode-180e": {
    "output": null,
    "input": "{ foo: \u180e 123 }"
  },
  "ws-unicode-newlines": {
    "output": "[123, 456]",
    "input": "[\u000D123,\u2028456,\u2029]"
  },
  "ws-string-u-2028-u-2029": {
    "output": "\"\\u2028\\u2029\"",
    "input": "'\u2028\u2029'"
  }
}